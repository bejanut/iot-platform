/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _AUTH_H_RPCGEN
#define _AUTH_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct Auth_Response {
	int status;
	char *accessToken;
	char *refreshToken;
	int expiry;
};
typedef struct Auth_Response Auth_Response;

struct Auth_Request {
	char *requestToken;
	int shouldRefresh;
};
typedef struct Auth_Request Auth_Request;

struct Action_Request {
	char *accessToken;
	char *resource;
	char *action;
};
typedef struct Action_Request Action_Request;

#define LOAD_PROG 123456789
#define LOAD_VERS 1

#define LOAD_PROG 123456789
#define LOAD_VERS 1
#define REQUEST 0
#define READ 1
#define INSERT 2
#define MODIFY 4
#define DELETE 8
#define EXECUTE 16

#define PERMISSION_GRANTED 0
#define USER_NOT_FOUND 1
#define REQUEST_DENIED 2
#define RESOURCE_NOT_FOUND 3
#define PERMISSION_DENIED 4
#define OPERATION_NOT_PERMITTED 5
#define TOKEN_EXPIRED 6

void initServer(char **argv);

#if defined(__STDC__) || defined(__cplusplus)
#define request_Authorization 1
extern  char ** request_authorization_1(char **, CLIENT *);
extern  char ** request_authorization_1_svc(char **, struct svc_req *);
#define approve_Request_Token 2
extern  char ** approve_request_token_1(char **, CLIENT *);
extern  char ** approve_request_token_1_svc(char **, struct svc_req *);
#define request_Access_Token 3
extern  Auth_Response * request_access_token_1(Auth_Request *, CLIENT *);
extern  Auth_Response * request_access_token_1_svc(Auth_Request *, struct svc_req *);
#define refresh_Access_Token 4
extern  Auth_Response * refresh_access_token_1(char **, CLIENT *);
extern  Auth_Response * refresh_access_token_1_svc(char **, struct svc_req *);
#define validate_Delegated_Action 5
extern  int * validate_delegated_action_1(Action_Request *, CLIENT *);
extern  int * validate_delegated_action_1_svc(Action_Request *, struct svc_req *);
#define stop_Server 6
extern  void * stop_server_1(void *, CLIENT *);
extern  void * stop_server_1_svc(void *, struct svc_req *);
extern int load_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define request_Authorization 1
extern  char ** request_authorization_1();
extern  char ** request_authorization_1_svc();
#define approve_Request_Token 2
extern  char ** approve_request_token_1();
extern  char ** approve_request_token_1_svc();
#define request_Access_Token 3
extern  Auth_Response * request_access_token_1();
extern  Auth_Response * request_access_token_1_svc();
#define refresh_Access_Token 4
extern  Auth_Response * refresh_access_token_1();
extern  Auth_Response * refresh_access_token_1_svc();
#define validate_Delegated_Action 5
extern  int * validate_delegated_action_1();
extern  int * validate_delegated_action_1_svc();
#define stop_Server 6
extern  void * stop_server_1();
extern  void * stop_server_1_svc();
extern int load_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Auth_Response (XDR *, Auth_Response*);
extern  bool_t xdr_Auth_Request (XDR *, Auth_Request*);
extern  bool_t xdr_Action_Request (XDR *, Action_Request*);

#else /* K&R C */
extern bool_t xdr_Auth_Response ();
extern bool_t xdr_Auth_Request ();
extern bool_t xdr_Action_Request ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_AUTH_H_RPCGEN */
